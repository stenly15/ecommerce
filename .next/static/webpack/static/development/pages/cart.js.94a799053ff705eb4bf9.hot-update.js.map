{"version":3,"file":"static/webpack/static/development/pages/cart.js.94a799053ff705eb4bf9.hot-update.js","sources":["webpack:///./pages/cart.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../components/layout';\nimport Header from '../components/header';\n\nimport * as cartActions from \"../store/actions/cart\";\n\nimport CurrencyFormat from 'react-currency-format';\n\nconst CartList = ({ id, name, price, quantity, sum }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <h4>{name}</h4>\n            <p>Price : <CurrencyFormat value={price} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></p>\n            <p>Quantity: {quantity}</p>\n            <p>SubTotal: <CurrencyFormat value={sum} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></p>\n            <button onClick={() => { dispatch(cartActions.removeFromCart(id)) }}>Delete This Item</button>\n        </div>\n    )\n}\n\nconst Cart = () => {\n    const cartItems = useSelector(state => {\n        const transformedCartItems = [];\n        for (const key in state.cart.items) {\n            transformedCartItems.push({\n                productId: key,\n                productName: state.cart.items[key].productName,\n                productPrice: state.cart.items[key].productPrice,\n                quantity: state.cart.items[key].quantity,\n                sum: state.cart.items[key].sum\n            });\n        }\n        return transformedCartItems;\n    });\n\n    const totalAmount = useSelector(state => state.cart.totalAmount);\n\n    return (\n        <Layout>\n            <Header />\n            {\n                totalAmount === 0\n                    ? <h2>Your Cart is Empty</h2>\n                    : cartItems.map(item =>\n                        <CartList\n                            key={item.productId}\n                            id={item.productId}\n                            name={item.productName}\n                            price={item.productPrice}\n                            quantity={item.quantity}\n                            sum={item.sum}\n                        />\n                    )\n            }\n            {\n                totalAmount !== 0 &&\n                <h2>Grand Total: <CurrencyFormat value={totalAmount} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /> </h2>\n            }\n        </Layout>\n    )\n}\n\nexport default Cart;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}