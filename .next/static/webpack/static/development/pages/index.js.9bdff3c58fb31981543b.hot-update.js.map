{"version":3,"file":"static/webpack/static/development/pages/index.js.9bdff3c58fb31981543b.hot-update.js","sources":["webpack:///./models/product.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./store/reducers/cart.js"],"sourcesContent":["class Product {\n    constructor(id, name, price, description, image) {\n        this.id = id;\n        this.name = name;\n        this.price = price;\n        this.description = description;\n        this.image = image;\n    }\n}\n\nexport default Product;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { ADD_TO_CART } from \"../actions/cart\";\nimport CartItem from '../../models/product';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialState = {\n    items: {}\n};\n\nconst cartReducer = createReducer(initialState, {\n    [ADD_TO_CART]: (state, action) => {\n        const addedProduct = action.payload;\n        console.log(addedProduct)\n        if (state.items[addedProduct.productId]) {\n            // already have the item in the cart\n            state.items[addedProduct.productId].quantity + 1\n        } else {\n            updatedOrNewCartItem = new CartItem(1, prodPrice, prodTitle, prodPrice);\n        }\n\n        return {\n            ...state,\n            items: { ...state.items, [addedProduct.id]: updatedOrNewCartItem },\n        };\n    }\n})\n\nexport default cartReducer;"],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AAGA;;;;A","sourceRoot":""}