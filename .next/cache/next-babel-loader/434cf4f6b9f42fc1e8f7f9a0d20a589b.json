{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { ADD_TO_CART } from \"../actions/cart\";\nconst ADD_TO_CART = createAction('ADD_TO_CART');\nconst initialState = {\n  items: 0\n};\ncartReducer = createReducer(initialState, {\n  [ADD_TO_CART]: (state, action) => {\n    return _objectSpread({}, state, {\n      items: items + 1\n    });\n  }\n});\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mayrra/Workspace/hctive/ecommerce/store/reducers/cart.js"],"names":["ADD_TO_CART","createAction","initialState","items","cartReducer","createReducer","state","action"],"mappings":";;;;;;AAAA;AAEA,MAAMA,WAAW,GAAGC,YAAY,CAAC,aAAD,CAAhC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIAC,WAAW,GAAGC,aAAa,CAACH,YAAD,EAAe;AACtC,GAACF,WAAD,GAAe,CAACM,KAAD,EAAQC,MAAR,KAAmB;AAC9B,6BACOD,KADP;AAEIH,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAFnB;AAIH;AANqC,CAAf,CAA3B;AASA,eAAeC,WAAf","sourcesContent":["// import { ADD_TO_CART } from \"../actions/cart\";\n\nconst ADD_TO_CART = createAction('ADD_TO_CART')\n\nconst initialState = {\n    items: 0\n};\n\ncartReducer = createReducer(initialState, {\n    [ADD_TO_CART]: (state, action) => {\n        return {\n            ...state,\n            items: items + 1\n        };\n    }\n})\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}