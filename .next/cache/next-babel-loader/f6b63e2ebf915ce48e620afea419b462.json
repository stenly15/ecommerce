{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mayrra/Workspace/hctive/ecommerce/pages/cart.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useSelector, useDispatch } from 'react-redux';\nimport Layout from '../components/layout';\nimport Header from '../components/header';\nimport * as cartActions from \"../store/actions/cart\";\nimport CurrencyFormat from 'react-currency-format';\n\nvar CartList = function CartList(_ref) {\n  var id = _ref.id,\n      image = _ref.image,\n      name = _ref.name,\n      price = _ref.price,\n      quantity = _ref.quantity,\n      sum = _ref.sum;\n  var dispatch = useDispatch();\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Price : \", __jsx(CurrencyFormat, {\n    value: price,\n    displayType: 'text',\n    thousandSeparator: true,\n    prefix: 'Rp. ',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 24\n    }\n  })), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Quantity: \", quantity), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"SubTotal: \", __jsx(CurrencyFormat, {\n    value: sum,\n    displayType: 'text',\n    thousandSeparator: true,\n    prefix: 'Rp. ',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      dispatch(cartActions.removeFromCart(id));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Delete This Item\"));\n};\n\nvar Cart = function Cart() {\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productName: state.cart.items[key].productName,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems;\n  });\n  var totalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), totalAmount === 0 ? __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }\n  }, \"Your Cart is Empty\") : cartItems.map(function (item) {\n    return __jsx(\"div\", {\n      key: item.productId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, __jsx(CartList, {\n      id: item.productId,\n      image: item.productImage,\n      name: item.productName,\n      price: item.productPrice,\n      quantity: item.quantity,\n      sum: item.sum,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, \"Grand Total: \", __jsx(CurrencyFormat, {\n      value: totalAmount,\n      displayType: 'text',\n      thousandSeparator: true,\n      prefix: 'Rp. ',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 46\n      }\n    }), \" \"));\n  }));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/mayrra/Workspace/hctive/ecommerce/pages/cart.js"],"names":["useSelector","useDispatch","Layout","Header","cartActions","CurrencyFormat","CartList","id","image","name","price","quantity","sum","dispatch","removeFromCart","Cart","cartItems","state","transformedCartItems","key","cart","items","push","productId","productName","productPrice","totalAmount","map","item","productImage"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport Layout from '../components/layout';\nimport Header from '../components/header';\n\nimport * as cartActions from \"../store/actions/cart\";\n\nimport CurrencyFormat from 'react-currency-format';\n\nconst CartList = ({ id, image, name, price, quantity, sum }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            <h4>{name}</h4>\n            <p>Price : <CurrencyFormat value={price} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></p>\n            <p>Quantity: {quantity}</p>\n            <p>SubTotal: <CurrencyFormat value={sum} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /></p>\n            <button onClick={() => { dispatch(cartActions.removeFromCart(id)) }}>Delete This Item</button>\n        </div>\n    )\n}\n\nconst Cart = () => {\n    const cartItems = useSelector(state => {\n        const transformedCartItems = [];\n        for (const key in state.cart.items) {\n            transformedCartItems.push({\n                productId: key,\n                productName: state.cart.items[key].productName,\n                productPrice: state.cart.items[key].productPrice,\n                quantity: state.cart.items[key].quantity,\n                sum: state.cart.items[key].sum\n            });\n        }\n        return transformedCartItems;\n    });\n\n    const totalAmount = useSelector(state => state.cart.totalAmount);\n\n    return (\n        <Layout>\n            <Header />\n            {\n                totalAmount === 0\n                    ? <h2>Your Cart is Empty</h2>\n                    : cartItems.map(item =>\n                        <div key={item.productId}>\n                            <CartList\n                                id={item.productId}\n                                image={item.productImage}\n                                name={item.productName}\n                                price={item.productPrice}\n                                quantity={item.quantity}\n                                sum={item.sum}\n                            />\n                            <h2>Grand Total: <CurrencyFormat value={totalAmount} displayType={'text'} thousandSeparator={true} prefix={'Rp. '} /> </h2>\n                        </div>\n                    )\n            }\n        </Layout>\n    )\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}