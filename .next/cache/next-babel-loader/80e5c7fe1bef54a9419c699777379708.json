{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\nimport { createReducer } from '@reduxjs/toolkit';\nvar initialState = {\n  items: {},\n  totalAmount: 0\n};\nvar cartReducer = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, ADD_TO_CART, function (state, action) {\n  var _action$payload = action.payload,\n      productId = _action$payload.productId,\n      productName = _action$payload.productName,\n      productPrice = _action$payload.productPrice,\n      productDescription = _action$payload.productDescription,\n      productImage = _action$payload.productImage,\n      productCategory = _action$payload.productCategory;\n  console.log(action.payload);\n  var updatedOrNewCartItem;\n\n  if (state.items[productId]) {\n    updatedOrNewCartItem = {\n      productId: productId,\n      productName: productName,\n      productPrice: productPrice,\n      productDescription: productDescription,\n      productImage: productImage,\n      productCategory: productCategory,\n      quantity: state.items[productId].quantity + 1,\n      sum: state.items[productId].sum + productPrice\n    };\n  } else {\n    updatedOrNewCartItem = {\n      productId: productId,\n      productName: productName,\n      productPrice: productPrice,\n      productDescription: productDescription,\n      productImage: productImage,\n      productCategory: productCategory,\n      quantity: 1,\n      sum: productPrice\n    };\n  }\n\n  return _objectSpread({}, state, {\n    items: _objectSpread({}, state.items, _defineProperty({}, productId, updatedOrNewCartItem)),\n    totalAmount: state.totalAmount + productPrice\n  });\n}), _defineProperty(_createReducer, REMOVE_FROM_CART, function (state, action) {\n  // const selectedCartItem = state.items[action.payload.pid];\n  console.log(action.payload); // const currentQty = selectedCartItem.quantity;\n  // return {\n  //     ...state,\n  //     items: { ...state.items, [productId]: updatedOrNewCartItem },\n  //     totalAmount: state.totalAmount + productPrice\n  // };\n}), _createReducer));\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mayrra/Workspace/hctive/ecommerce/store/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","createReducer","initialState","items","totalAmount","cartReducer","state","action","payload","productId","productName","productPrice","productDescription","productImage","productCategory","console","log","updatedOrNewCartItem","quantity","sum"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,iBAA9C;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,IAAMC,WAAW,GAAGJ,aAAa,CAACC,YAAD,wDAC5BH,WAD4B,EACd,UAACO,KAAD,EAAQC,MAAR,EAAmB;AAAA,wBAQ1BA,MAAM,CAACC,OARmB;AAAA,MAE1BC,SAF0B,mBAE1BA,SAF0B;AAAA,MAG1BC,WAH0B,mBAG1BA,WAH0B;AAAA,MAI1BC,YAJ0B,mBAI1BA,YAJ0B;AAAA,MAK1BC,kBAL0B,mBAK1BA,kBAL0B;AAAA,MAM1BC,YAN0B,mBAM1BA,YAN0B;AAAA,MAO1BC,eAP0B,mBAO1BA,eAP0B;AAS9BC,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACC,OAAnB;AAEA,MAAIS,oBAAJ;;AAEA,MAAIX,KAAK,CAACH,KAAN,CAAYM,SAAZ,CAAJ,EAA4B;AACxBQ,IAAAA,oBAAoB,GAAG;AACnBR,MAAAA,SAAS,EAATA,SADmB;AAEnBC,MAAAA,WAAW,EAAXA,WAFmB;AAGnBC,MAAAA,YAAY,EAAZA,YAHmB;AAInBC,MAAAA,kBAAkB,EAAlBA,kBAJmB;AAKnBC,MAAAA,YAAY,EAAZA,YALmB;AAMnBC,MAAAA,eAAe,EAAfA,eANmB;AAOnBI,MAAAA,QAAQ,EAAEZ,KAAK,CAACH,KAAN,CAAYM,SAAZ,EAAuBS,QAAvB,GAAkC,CAPzB;AAQnBC,MAAAA,GAAG,EAAEb,KAAK,CAACH,KAAN,CAAYM,SAAZ,EAAuBU,GAAvB,GAA6BR;AARf,KAAvB;AAUH,GAXD,MAWO;AACHM,IAAAA,oBAAoB,GAAG;AACnBR,MAAAA,SAAS,EAATA,SADmB;AAEnBC,MAAAA,WAAW,EAAXA,WAFmB;AAGnBC,MAAAA,YAAY,EAAZA,YAHmB;AAInBC,MAAAA,kBAAkB,EAAlBA,kBAJmB;AAKnBC,MAAAA,YAAY,EAAZA,YALmB;AAMnBC,MAAAA,eAAe,EAAfA,eANmB;AAOnBI,MAAAA,QAAQ,EAAE,CAPS;AAQnBC,MAAAA,GAAG,EAAER;AARc,KAAvB;AAUH;;AAED,2BACOL,KADP;AAEIH,IAAAA,KAAK,oBAAOG,KAAK,CAACH,KAAb,sBAAqBM,SAArB,EAAiCQ,oBAAjC,EAFT;AAGIb,IAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,GAAoBO;AAHrC;AAKH,CA3C4B,mCA4C5BX,gBA5C4B,EA4CT,UAACM,KAAD,EAAQC,MAAR,EAAmB;AACnC;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACC,OAAnB,EAFmC,CAInC;AAEA;AACA;AACA;AACA;AACA;AACH,CAvD4B,mBAAjC;AA0DA,eAAeH,WAAf","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\n\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialState = {\n    items: {},\n    totalAmount: 0\n};\n\nconst cartReducer = createReducer(initialState, {\n    [ADD_TO_CART]: (state, action) => {\n        const {\n            productId,\n            productName,\n            productPrice,\n            productDescription,\n            productImage,\n            productCategory\n        } = action.payload;\n        console.log(action.payload);\n\n        let updatedOrNewCartItem;\n\n        if (state.items[productId]) {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: state.items[productId].quantity + 1,\n                sum: state.items[productId].sum + productPrice\n            }\n        } else {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: 1,\n                sum: productPrice\n            }\n        }\n\n        return {\n            ...state,\n            items: { ...state.items, [productId]: updatedOrNewCartItem },\n            totalAmount: state.totalAmount + productPrice\n        };\n    },\n    [REMOVE_FROM_CART]: (state, action) => {\n        // const selectedCartItem = state.items[action.payload.pid];\n        console.log(action.payload);\n\n        // const currentQty = selectedCartItem.quantity;\n\n        // return {\n        //     ...state,\n        //     items: { ...state.items, [productId]: updatedOrNewCartItem },\n        //     totalAmount: state.totalAmount + productPrice\n        // };\n    }\n})\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}