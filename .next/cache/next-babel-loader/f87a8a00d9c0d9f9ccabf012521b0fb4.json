{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\nimport { createReducer } from '@reduxjs/toolkit';\nconst initialState = {\n  items: {},\n  totalAmount: 0\n};\nconst cartReducer = createReducer(initialState, {\n  [ADD_TO_CART]: (state, action) => {\n    const {\n      productId,\n      productName,\n      productPrice,\n      productDescription,\n      productImage,\n      productCategory\n    } = action.payload; // console.log(action.payload);\n\n    let updatedOrNewCartItem;\n\n    if (state.items[productId]) {\n      updatedOrNewCartItem = {\n        productId,\n        productName,\n        productPrice,\n        productDescription,\n        productImage,\n        productCategory,\n        quantity: state.items[productId].quantity + 1,\n        sum: state.items[productId].sum + productPrice\n      };\n    } else {\n      updatedOrNewCartItem = {\n        productId,\n        productName,\n        productPrice,\n        productDescription,\n        productImage,\n        productCategory,\n        quantity: 1,\n        sum: productPrice\n      };\n    }\n\n    return _objectSpread({}, state, {\n      items: _objectSpread({}, state.items, {\n        [productId]: updatedOrNewCartItem\n      }),\n      totalAmount: state.totalAmount + productPrice\n    });\n  },\n  [REMOVE_FROM_CART]: (state, action) => {\n    const {\n      productId,\n      productName,\n      productPrice,\n      productDescription,\n      productImage,\n      productCategory,\n      quantity\n    } = state.items[action.payload];\n    let updatedCartItems;\n\n    if (quantity > 1) {\n      //need to reduce, not erase it\n      updatedCartItems = {\n        productId,\n        productName,\n        productPrice,\n        productDescription,\n        productImage,\n        productCategory,\n        quantity: state.items[productId].quantity - 1,\n        sum: state.items[productId].sum - productPrice\n      };\n    } else {\n      updatedCartItems = _objectSpread({}, state.items);\n    }\n\n    return _objectSpread({}, state, {\n      items: updatedCartItems,\n      totalAmount: state.totalAmount - productPrice\n    });\n  }\n});\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mayrra/Workspace/hctive/ecommerce/store/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","createReducer","initialState","items","totalAmount","cartReducer","state","action","productId","productName","productPrice","productDescription","productImage","productCategory","payload","updatedOrNewCartItem","quantity","sum","updatedCartItems"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,iBAA9C;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,WAAW,EAAE;AAFI,CAArB;AAKA,MAAMC,WAAW,GAAGJ,aAAa,CAACC,YAAD,EAAe;AAC5C,GAACH,WAAD,GAAe,CAACO,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAM;AACFC,MAAAA,SADE;AAEFC,MAAAA,WAFE;AAGFC,MAAAA,YAHE;AAIFC,MAAAA,kBAJE;AAKFC,MAAAA,YALE;AAMFC,MAAAA;AANE,QAOFN,MAAM,CAACO,OAPX,CAD8B,CAS9B;;AAEA,QAAIC,oBAAJ;;AAEA,QAAIT,KAAK,CAACH,KAAN,CAAYK,SAAZ,CAAJ,EAA4B;AACxBO,MAAAA,oBAAoB,GAAG;AACnBP,QAAAA,SADmB;AAEnBC,QAAAA,WAFmB;AAGnBC,QAAAA,YAHmB;AAInBC,QAAAA,kBAJmB;AAKnBC,QAAAA,YALmB;AAMnBC,QAAAA,eANmB;AAOnBG,QAAAA,QAAQ,EAAEV,KAAK,CAACH,KAAN,CAAYK,SAAZ,EAAuBQ,QAAvB,GAAkC,CAPzB;AAQnBC,QAAAA,GAAG,EAAEX,KAAK,CAACH,KAAN,CAAYK,SAAZ,EAAuBS,GAAvB,GAA6BP;AARf,OAAvB;AAUH,KAXD,MAWO;AACHK,MAAAA,oBAAoB,GAAG;AACnBP,QAAAA,SADmB;AAEnBC,QAAAA,WAFmB;AAGnBC,QAAAA,YAHmB;AAInBC,QAAAA,kBAJmB;AAKnBC,QAAAA,YALmB;AAMnBC,QAAAA,eANmB;AAOnBG,QAAAA,QAAQ,EAAE,CAPS;AAQnBC,QAAAA,GAAG,EAAEP;AARc,OAAvB;AAUH;;AAED,6BACOJ,KADP;AAEIH,MAAAA,KAAK,oBAAOG,KAAK,CAACH,KAAb;AAAoB,SAACK,SAAD,GAAaO;AAAjC,QAFT;AAGIX,MAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,GAAoBM;AAHrC;AAKH,GA3C2C;AA4C5C,GAACV,gBAAD,GAAoB,CAACM,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAM;AACFC,MAAAA,SADE;AAEFC,MAAAA,WAFE;AAGFC,MAAAA,YAHE;AAIFC,MAAAA,kBAJE;AAKFC,MAAAA,YALE;AAMFC,MAAAA,eANE;AAOFG,MAAAA;AAPE,QAQFV,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACO,OAAnB,CARJ;AAUA,QAAII,gBAAJ;;AAEA,QAAIF,QAAQ,GAAG,CAAf,EAAkB;AACd;AACAE,MAAAA,gBAAgB,GAAG;AACfV,QAAAA,SADe;AAEfC,QAAAA,WAFe;AAGfC,QAAAA,YAHe;AAIfC,QAAAA,kBAJe;AAKfC,QAAAA,YALe;AAMfC,QAAAA,eANe;AAOfG,QAAAA,QAAQ,EAAEV,KAAK,CAACH,KAAN,CAAYK,SAAZ,EAAuBQ,QAAvB,GAAkC,CAP7B;AAQfC,QAAAA,GAAG,EAAEX,KAAK,CAACH,KAAN,CAAYK,SAAZ,EAAuBS,GAAvB,GAA6BP;AARnB,OAAnB;AAUH,KAZD,MAYO;AACHQ,MAAAA,gBAAgB,qBAAQZ,KAAK,CAACH,KAAd,CAAhB;AACH;;AAED,6BACOG,KADP;AAEIH,MAAAA,KAAK,EAAEe,gBAFX;AAGId,MAAAA,WAAW,EAAEE,KAAK,CAACF,WAAN,GAAoBM;AAHrC;AAKH;AA9E2C,CAAf,CAAjC;AAiFA,eAAeL,WAAf","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/cart\";\n\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialState = {\n    items: {},\n    totalAmount: 0\n};\n\nconst cartReducer = createReducer(initialState, {\n    [ADD_TO_CART]: (state, action) => {\n        const {\n            productId,\n            productName,\n            productPrice,\n            productDescription,\n            productImage,\n            productCategory\n        } = action.payload;\n        // console.log(action.payload);\n\n        let updatedOrNewCartItem;\n\n        if (state.items[productId]) {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: state.items[productId].quantity + 1,\n                sum: state.items[productId].sum + productPrice\n            }\n        } else {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: 1,\n                sum: productPrice\n            }\n        }\n\n        return {\n            ...state,\n            items: { ...state.items, [productId]: updatedOrNewCartItem },\n            totalAmount: state.totalAmount + productPrice\n        };\n    },\n    [REMOVE_FROM_CART]: (state, action) => {\n        const {\n            productId,\n            productName,\n            productPrice,\n            productDescription,\n            productImage,\n            productCategory,\n            quantity\n        } = state.items[action.payload];\n\n        let updatedCartItems;\n\n        if (quantity > 1) {\n            //need to reduce, not erase it\n            updatedCartItems = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: state.items[productId].quantity - 1,\n                sum: state.items[productId].sum - productPrice\n            }\n        } else {\n            updatedCartItems = { ...state.items };\n        }\n\n        return {\n            ...state,\n            items: updatedCartItems,\n            totalAmount: state.totalAmount - productPrice\n        };\n    }\n})\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}