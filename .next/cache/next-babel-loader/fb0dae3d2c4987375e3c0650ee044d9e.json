{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_TO_CART } from \"../actions/cart\";\nimport { createReducer } from '@reduxjs/toolkit';\nvar initialState = {\n  items: {}\n};\nvar cartReducer = createReducer(initialState, _defineProperty({}, ADD_TO_CART, function (state, action) {\n  var addedProduct = action.payload;\n  var _action$payload = action.payload,\n      productId = _action$payload.productId,\n      productName = _action$payload.productName,\n      productPrice = _action$payload.productPrice,\n      productDescription = _action$payload.productDescription,\n      productImage = _action$payload.productImage,\n      productCategory = _action$payload.productCategory;\n  var updatedOrNewCartItem;\n\n  if (state.items[productId]) {\n    updatedOrNewCartItem = {\n      productId: productId,\n      productName: productName,\n      productPrice: productPrice,\n      productDescription: productDescription,\n      productImage: productImage,\n      productCategory: productCategory,\n      quantity: state.items[productId].quantity + 1\n    };\n  } else {\n    updatedOrNewCartItem = {\n      productId: productId,\n      productName: productName,\n      productPrice: productPrice,\n      productDescription: productDescription,\n      productImage: productImage,\n      productCategory: productCategory,\n      quantity: 1\n    };\n  }\n\n  return _objectSpread({}, state, {\n    items: _objectSpread({}, state.items, _defineProperty({}, productId, updatedOrNewCartItem))\n  });\n}));\nexport default cartReducer;","map":{"version":3,"sources":["/Users/mayrra/Workspace/hctive/ecommerce/store/reducers/cart.js"],"names":["ADD_TO_CART","createReducer","initialState","items","cartReducer","state","action","addedProduct","payload","productId","productName","productPrice","productDescription","productImage","productCategory","updatedOrNewCartItem","quantity"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,IAAMC,WAAW,GAAGH,aAAa,CAACC,YAAD,sBAC5BF,WAD4B,EACd,UAACK,KAAD,EAAQC,MAAR,EAAmB;AAC9B,MAAMC,YAAY,GAAGD,MAAM,CAACE,OAA5B;AAD8B,wBAS1BF,MAAM,CAACE,OATmB;AAAA,MAG1BC,SAH0B,mBAG1BA,SAH0B;AAAA,MAI1BC,WAJ0B,mBAI1BA,WAJ0B;AAAA,MAK1BC,YAL0B,mBAK1BA,YAL0B;AAAA,MAM1BC,kBAN0B,mBAM1BA,kBAN0B;AAAA,MAO1BC,YAP0B,mBAO1BA,YAP0B;AAAA,MAQ1BC,eAR0B,mBAQ1BA,eAR0B;AAW9B,MAAIC,oBAAJ;;AAEA,MAAIV,KAAK,CAACF,KAAN,CAAYM,SAAZ,CAAJ,EAA4B;AACxBM,IAAAA,oBAAoB,GAAG;AACnBN,MAAAA,SAAS,EAATA,SADmB;AAEnBC,MAAAA,WAAW,EAAXA,WAFmB;AAGnBC,MAAAA,YAAY,EAAZA,YAHmB;AAInBC,MAAAA,kBAAkB,EAAlBA,kBAJmB;AAKnBC,MAAAA,YAAY,EAAZA,YALmB;AAMnBC,MAAAA,eAAe,EAAfA,eANmB;AAOnBE,MAAAA,QAAQ,EAAEX,KAAK,CAACF,KAAN,CAAYM,SAAZ,EAAuBO,QAAvB,GAAkC;AAPzB,KAAvB;AASH,GAVD,MAUO;AACHD,IAAAA,oBAAoB,GAAG;AACnBN,MAAAA,SAAS,EAATA,SADmB;AAEnBC,MAAAA,WAAW,EAAXA,WAFmB;AAGnBC,MAAAA,YAAY,EAAZA,YAHmB;AAInBC,MAAAA,kBAAkB,EAAlBA,kBAJmB;AAKnBC,MAAAA,YAAY,EAAZA,YALmB;AAMnBC,MAAAA,eAAe,EAAfA,eANmB;AAOnBE,MAAAA,QAAQ,EAAE;AAPS,KAAvB;AASH;;AAED,2BACOX,KADP;AAEIF,IAAAA,KAAK,oBAAOE,KAAK,CAACF,KAAb,sBAAqBM,SAArB,EAAiCM,oBAAjC;AAFT;AAIH,CAxC4B,EAAjC;AA2CA,eAAeX,WAAf","sourcesContent":["import { ADD_TO_CART } from \"../actions/cart\";\n\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst initialState = {\n    items: {}\n};\n\nconst cartReducer = createReducer(initialState, {\n    [ADD_TO_CART]: (state, action) => {\n        const addedProduct = action.payload;\n        const {\n            productId,\n            productName,\n            productPrice,\n            productDescription,\n            productImage,\n            productCategory\n        } = action.payload;\n\n        let updatedOrNewCartItem;\n\n        if (state.items[productId]) {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: state.items[productId].quantity + 1\n            }\n        } else {\n            updatedOrNewCartItem = {\n                productId,\n                productName,\n                productPrice,\n                productDescription,\n                productImage,\n                productCategory,\n                quantity: 1\n            }\n        }\n\n        return {\n            ...state,\n            items: { ...state.items, [productId]: updatedOrNewCartItem },\n        };\n    }\n})\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}